steps:
  # Download keystore from Cloud Storage
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['cp', 'gs://poc-app-releases/keystore.jks', 'app/keystore.jks']

  # Update Gradle wrapper to latest version
  - name: 'gcr.io/cloud-builders/gradle'
    args: ['wrapper', '--gradle-version', '8.11.1']
    env:
      - 'GRADLE_USER_HOME=/workspace/.gradle'

  # Build the app
  - name: 'gcr.io/cloud-builders/gradle'
    args: ['build']
    env:
      - 'GRADLE_USER_HOME=/workspace/.gradle'
      - 'KEYSTORE_FILE=app/keystore.jks'
      - 'KEYSTORE_PASSWORD=${_KEYSTORE_PASSWORD}'
      - 'KEY_ALIAS=${_KEY_ALIAS}'
      - 'KEY_PASSWORD=${_KEY_PASSWORD}'

  # Run unit tests
  - name: 'gcr.io/cloud-builders/gradle'
    args: ['test']
    env:
      - 'GRADLE_USER_HOME=/workspace/.gradle'

  # Assemble debug APK
  - name: 'gcr.io/cloud-builders/gradle'
    args: ['assembleDebug']
    env:
      - 'GRADLE_USER_HOME=/workspace/.gradle'

  # Assemble release APK
  - name: 'gcr.io/cloud-builders/gradle'
    args: ['assembleRelease']
    env:
      - 'GRADLE_USER_HOME=/workspace/.gradle'
      - 'KEYSTORE_FILE=app/keystore.jks'
      - 'KEYSTORE_PASSWORD=${_KEYSTORE_PASSWORD}'
      - 'KEY_ALIAS=${_KEY_ALIAS}'
      - 'KEY_PASSWORD=${_KEY_PASSWORD}'

  # Upload release APK to Cloud Storage
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['cp', 'app/build/outputs/apk/release/app-release.apk', 'gs://poc-app-releases/release/app-release-${BUILD_ID}.apk']

  # Clean up keystore
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['rm', 'app/keystore.jks']

# Store the APK as a build artifact
artifacts:
  objects:
    location: 'gs://poc-app-releases/release/'
    paths: ['app-release-${BUILD_ID}.apk']

# Define substitutions
substitutions:
  _KEYSTORE_PASSWORD: '123456'  # Will be set in Cloud Build trigger
  _KEY_ALIAS: 'laennecai-keystore'         # Will be set in Cloud Build trigger
  _KEY_PASSWORD: '123456'      # Will be set in Cloud Build trigger

options:
  logging: CLOUD_LOGGING_ONLY 